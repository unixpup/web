---
import Layout from '@layouts/Layout.astro';
import Footer from '@components/Footer.astro';
import Analytics from '@vercel/analytics/astro';
import SpeedInsights from "@vercel/speed-insights/astro";

// Define welcome messages in different languages with emojis
// These will be used for the rotating welcome message animation
const welcomeMessages = [
  { text: "Welcome!", lang: "English", emoji: "🇬🇧" },
  { text: "¡Bienvenido!", lang: "Spanish", emoji: "🇪🇸" },
  { text: "いらっしゃいませ!", lang: "Japanese", emoji: "🇯🇵" },
  { text: "Willkommen!", lang: "German", emoji: "🇩🇪" },
  { text: "Bienvenue!", lang: "French", emoji: "🇫🇷" },
  { text: "欢迎!", lang: "Chinese", emoji: "🇨🇳" },
  { text: "Bem-vindo!", lang: "Portuguese", emoji: "🇵🇹" },
  { text: "환영합니다!", lang: "Korean", emoji: "🇰🇷" },
];
---

<Layout title="Home | vermillionpaws" description="Welcome to my personal website! Explore my projects, skills, and more.">
  <main class="min-h-screen flex flex-col">
    <!-- Hero Section -->
    <section class="flex flex-col items-center justify-center pt-32 pb-24 px-4">
      <div class="animate-fade-in container max-w-4xl mx-auto text-center">
        <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold mb-6 text-white tracking-tighter perspective-text">
          <!-- Single welcome message container with controlled visibility -->
          <div id="welcome-text-container" class="relative h-[1.2em]">
            <span id="welcome-text" class="absolute top-0 left-0 right-0 bg-gradient-to-r from-blue-400 to-purple-600 bg-clip-text text-transparent">Welcome!</span>
          </div>
          <div class="text-sm md:text-base text-neutral-500 mt-2 font-normal">
            <span id="language-indicator">English 🇬🇧</span>
          </div>
        </h1>
        <p class="text-lg md:text-xl text-neutral-400 max-w-2xl mx-auto mb-10">
          {('home.intro')}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a class="btn bg-white/5 hover:bg-white/10 border border-white/10 rounded-md px-6 py-3 text-sm font-medium transition-all">
            {('home.aboutButton')}
          </a>
          <a class="btn bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 rounded-md px-6 py-3 text-sm font-medium transition-all text-white">
            {('home.projectsButton')}
          </a>
        </div>
      </div>
    </section>

    <!-- Featured Skills -->
    <section class="py-20 px-4 bg-neutral-900/30">
      <div class="container max-w-4xl mx-auto">
        <h2 class="text-xl md:text-2xl font-semibold mb-12 text-center">
          <span class="text-neutral-500">// </span>{('home.skillsTitle')}
        </h2>

        <div class="grid grid-cols-2 md:grid-cols-3 gap-6">
          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-blue-500/20 flex items-center justify-center text-blue-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.webDev.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.webDev.desc')}</p>
          </div>

          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-purple-500/20 flex items-center justify-center text-purple-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 3v3a2 2 0 0 1-2 2H3m18-3v3a2 2 0 0 0-2 2h3M3 16v3a2 2 0 0 0 2 2h3m8-2h3a2 2 0 0 0 2-2v-3"></path></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.neovim.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.neovim.desc')}</p>
          </div>

          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-green-500/20 flex items-center justify-center text-green-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 18l6-6-6-6"></path><path d="M8 6l-6 6 6 6"></path></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.lua.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.lua.desc')}</p>
          </div>

          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-pink-500/20 flex items-center justify-center text-pink-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1-5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.uiux.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.uiux.desc')}</p>
          </div>

          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-yellow-500/20 flex items-center justify-center text-yellow-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.workflow.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.workflow.desc')}</p>
          </div>

          <div class="card p-6 bg-white/[0.03] backdrop-blur-sm border border-white/5 rounded-lg transition-all hover:bg-white/[0.05]">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 rounded-full bg-blue-500/20 flex items-center justify-center text-blue-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2l-5.5 9h11L12 2z"></path><circle cx="17.5" cy="17.5" r="3.5"></circle><circle cx="6.5" cy="17.5" r="3.5"></circle></svg>
              </div>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">{('home.skills.webgl.title')}</h3>
            <p class="text-sm text-neutral-400">{('home.skills.webgl.desc')}</p>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA -->
    <section class="py-24 px-4">
      <div class="container max-w-4xl mx-auto text-center">
        <div class="bg-gradient-to-r from-blue-900/20 to-purple-900/20 backdrop-blur-sm border border-white/5 rounded-lg p-8 sm:p-12">
          <h2 class="text-2xl md:text-3xl font-bold mb-4 text-white">{('home.cta.title')}</h2>
          <p class="text-neutral-400 mb-6 max-w-lg mx-auto">
            {('home.cta.desc')}
          </p>
          <a class="inline-block btn bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 rounded-md px-6 py-3 text-sm font-medium transition-all text-white">
            {('home.cta.button')}
          </a>
        </div>
      </div>
    </section>
  </main>

  <Footer />
  <Analytics />
  <SpeedInsights/>
</Layout>

<style>
  @keyframes fadeOut {
    0% {
      opacity: 1;
      transform: translateY(0);
    }
    100% {
      opacity: 0;
      transform: translateY(-10px);
    }
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateY(10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-out {
    animation: fadeOut 0.5s ease-in-out forwards;
  }

  .fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    // Get welcome messages from the server-side array
    const welcomeMessages = [
      { text: "Welcome!", lang: "English", emoji: "🇬🇧" },
      { text: "¡Bienvenido!", lang: "Spanish", emoji: "🇪🇸" },
      { text: "いらっしゃいませ!", lang: "Japanese", emoji: "🇯🇵" },
      { text: "Willkommen!", lang: "German", emoji: "🇩🇪" },
      { text: "Bienvenue!", lang: "French", emoji: "🇫🇷" },
      { text: "欢迎!", lang: "Chinese", emoji: "🇨🇳" },
      { text: "Bem-vindo!", lang: "Portuguese", emoji: "🇵🇹" },
      { text: "환영합니다!", lang: "Korean", emoji: "🇰🇷" },
    ];

    const welcomeText = document.getElementById('welcome-text');
    const languageIndicator = document.getElementById('language-indicator');
    let currentIndex = 0;
    let isAnimating = false;

    // Set interval to change the welcome message every 3 seconds
    setInterval(() => {
      if (isAnimating) return;
      changeWelcomeMessage();
    }, 3000);

    // Function to change welcome message with proper animation
    function changeWelcomeMessage() {
      if (!welcomeText || !languageIndicator) return;
      isAnimating = true;

      // Start fade-out animation
      welcomeText.classList.add('fade-out');

      // Wait for fade-out to complete
      setTimeout(() => {
        // Update index for the next message
        currentIndex = (currentIndex + 1) % welcomeMessages.length;

        // Update the text content
        const messageObj = welcomeMessages[currentIndex];
        welcomeText.textContent = messageObj.text;
        languageIndicator.textContent = `${messageObj.lang} ${messageObj.emoji}`;

        // Remove fade-out and add fade-in
        welcomeText.classList.remove('fade-out');
        welcomeText.classList.add('fade-in');

        // Fade in the language indicator
        languageIndicator.style.opacity = '1';

        // Clear the fade-in class after animation completes
        setTimeout(() => {
          welcomeText.classList.remove('fade-in');
          isAnimating = false;
        }, 500);
      }, 500);
    }
  });
</script>
